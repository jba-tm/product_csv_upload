version: "3.9"

services:
  backend:
    ports:
      - "${BACKEND_GUNICORN_PORT}:${BACKEND_GUNICORN_PORT}"
    container_name: ${STACK_NAME?Variable not set}_backend
    restart: on-failure
    depends_on:
      - db
    build:
      context: ./src/backend
      dockerfile: Dockerfile
    env_file:
      - .env

  frontend:
    container_name: ${STACK_NAME?Variable not set}_frontend
    depends_on:
      - backend
    build:
      context: ./src/frontend
      dockerfile: Dockerfile
      args:
        ENV_VARIABLE: ${ENV_VARIABLE}
        NEXT_PUBLIC_ENV_VARIABLE: ${NEXT_PUBLIC_ENV_VARIABLE}
    restart: always
    ports:
      - "${FRONTEND_PORT}:${FRONTEND_PORT}"
    environment:
      - PORT=${FRONTEND_PORT}

  db:
    container_name: ${STACK_NAME?Variable not set}_db
    image: mysql:8.0
    cap_add:
      - SYS_NICE
    restart: always
    environment:
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - MSSQL_PORT=
    ports:
      - '${MYSQL_PUBLIC_PORT}:3306'
    volumes:
      - db:/var/lib/mysql
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql
  adminer:
    container_name: ${STACK_NAME?Variable not set}_adminer
    image: adminer
    restart: always
    depends_on:
      - db
    ports:
      - "${ADMINER_PORT}:8080"


volumes:
  db:
    driver: local
